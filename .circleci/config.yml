version: 2

jobs:
  build:
    docker:
      - image: circleci/golang:latest
      
    working_directory: /go/src/github.com/rpi-ws281x/rpi-ws281x-go
    steps:
      - run:
          name: Building and installing C librairie
          command: |
            sudo apt-get install build-essential git scons curl
            echo "deb http://emdebian.org/tools/debian/ jessie main" | sudo tee /etc/apt/sources.list.d/crosstools.list
            curl http://emdebian.org/tools/debian/emdebian-toolchain-archive.key | sudo apt-key add -
            sudo dpkg --add-architecture armhf
            sudo apt-get update
            sudo apt-get install crossbuild-essential-armhf
            mkdir -p ${HOME}/src/lib
            cd ${HOME}/src/lib
            git clone https://github.com/jgarff/rpi_ws281x.git
            cd rpi_ws281x
            scons TOOLCHAIN=arm-linux-gnueabihf
            sudo mkdir -p /usr/local/lib
            sudo cp *.a /usr/local/lib
            sudo mkdir -p /usr/local/include
            sudo cp *.h /usr/local/include
      - checkout

      - run:
          name: Building librarie
          command: |
            sudo chown -R circleci:circleci /usr/local/go/pkg
            go get -v .
            go build
          environment:
            GOOS: "linux"
            GOARCH: "arm"
            CGO_ENABLED: "1"
            CC: arm-linux-gnueabihf-gcc
            CC_FOR_TARGET: arm-linux-gnueabihf-gcc
            CXX_FOR_TARGET: arm-linux-gnueabihf-g++
            CPATH: /usr/local/include
            LIBRARY_PATH: /usr/local/lib

      - run: 
          name: Installing linter
          command: |
            curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.16.0

      - run: 
          name: linting
          command: |
            golangci-lint run --enable-all .

      - run:
          name: Building examples
          command: |
            cd examples/hw; go build .
            cd ../color_wipe; go build .
            cd ../swiss; go build .
            cd ../invader8x8; go build .
            cd ../..
          environment:
            GOOS: "linux"
            GOARCH: "arm"
            CGO_ENABLED: "1"
            CC: arm-linux-gnueabihf-gcc
            CC_FOR_TARGET: arm-linux-gnueabihf-gcc
            CXX_FOR_TARGET: arm-linux-gnueabihf-g++
            CPATH: /usr/local/include
            LIBRARY_PATH: /usr/local/lib

      - store_artifacts:
          path: /go/pkg/linux_arm/github.com/rpi-ws281x/rpi-ws281x-go.a
      - store_artifacts:
          path: examples/hw/hw
      - store_artifacts:
          path: examples/color_wipe/color_wipe
      - store_artifacts:
          path: examples/swiss/swiss
      - store_artifacts:
          path: examples/invader8x8/invader8x8
